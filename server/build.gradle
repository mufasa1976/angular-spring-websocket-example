apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'http://repo.spring.io/shapshot' }
    maven { url = 'http://repo.spring.io/milestone' }
}

dependencyManagement {
    imports {
        mavenBom "io.spring.platform:platform-bom:${springPlatformVersion}"
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok'

    compile project(path: ':angular', configuration: 'webjar')

    compile 'org.springframework.boot:spring-boot-starter-thymeleaf',
            'org.springframework.boot:spring-boot-starter-websocket',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springframework.security:spring-security-messaging'

    compile "software.coolstuff:owncloud-spring-boot-starter:${owncloudSpringBootStarterVersion}"

    compile 'org.springframework.boot:spring-boot-actuator',
            'org.springframework.boot:spring-boot-devtools'
}

compileJava {
    options.compilerArgs << "-parameters"
    options.compilerArgs << "-Xlint:overrides" << "-Xlint:unchecked"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

jar {
    group = 'io.github.mufasa1976'
    baseName = 'angular-spring-websocket-example'
}

idea {
    module {
        outputDir = file('build/classes/main')
        testOutputDir = file('build/classes/test')
    }
}

clean.doFirst {
    delete '.gradle', "$project.buildDir", 'node_modules'
    followSymlinks = false
}

docker {
    baseImage = 'openjdk:8-jre'
    maintainer = 'mufasa1976@github.io'
}

task dockerize(type: Docker) {
    addFile {
        from bootJar
        rename { 'app.jar' }
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
}

dockerize.dependsOn build
